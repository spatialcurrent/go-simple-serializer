# =================================================================
#
# Copyright (C) 2022 Spatial Current, Inc. - All Rights Reserved
# Released as open source under the MIT License.  See LICENSE file.
#
# =================================================================

version: "2.1"

executors:
  # `main` uses the `cimg/go:1.17` docker image.
  main:
    docker:
      - image: cimg/go:1.17

jobs:

  # `test_go` tests the source code.
  test_go:
    executor: main
    steps:
      - checkout
      - run: make fmt
      - run: make imports
      - run: make test_go
      - run: git diff --exit-code

  # `test_cli` tests the executable.
  test_cli:
    executor: main
    steps:
      - checkout
      - run: make tidy
      - run: make bin/gss
      - run: make test_cli

  examples:
    executor: base
    steps:
      - run: sudo chown -R circleci /go/src
      - restore_cache:
          keys:
            - v1-go-src-{{ .Branch }}-{{ .Revision }}
      - run: make deps_gopherjs
      - run: make deps_javascript
      - run: npm run build:clean
      - run: make run_example_c
      - run: make run_example_cpp
      - run: make run_example_python

  # `build` builds the executables
  build:
    executor: main
    steps:
      - checkout

      # Update apt cache
      - run: sudo apt-get update

      # Tidy dependencies
      - run: make tidy

      # Build Executeables
      - run: make build_release

      # Remove gox
      - run: rm -f bin/gox

      - store_artifacts:
          path: bin
          destination: /
      - persist_to_workspace:
          root: bin
          paths:
            - gss_darwin_amd64
            - gss_darwin_arm64
            - gss_linux_386
            - gss_linux_amd64
            - gss_linux_arm
            - gss_linux_arm64
            - gss_windows_386.exe
            - gss_windows_amd64.exe

  build_so:
    executor: base
    steps:
      - run: sudo chown -R circleci /go/src
      - restore_cache:
          keys:
            - v1-go-src-{{ .Branch }}-{{ .Revision }}
      - run: sudo make deps_arm
      - run: make build_so
      - store_artifacts:
          path: bin
          destination: /

workflows:
  main:
    jobs:
      - pre_deps_golang
      - test_go:
          requires:
            - pre_deps_golang
      - test_cli:
          requires:
            - pre_deps_golang
      - test_javascript:
          requires:
            - pre_deps_golang
      - examples:
          requires:
            - pre_deps_golang
      - build_cli:
          requires:
            - pre_deps_golang
      - build_javascript:
          requires:
            - pre_deps_golang
      - build_so:
          requires:
            - pre_deps_golang
